{
  "folders": [
    { "path": ".", "name": "/workspace" },
    { "path": "backend", "name": "/workspace/backend" },
    { "path": "frontend", "name": "/workspace/frontend" },
    { "path": "legacy", "name": "/workspace/legacy" },
    {
      "path": "backend/package",
      "name": "/workspace/backend/package"
    },
    {
      "path": "frontend/package",
      "name": "/workspace/frontend/package"
    },
    {
      "path": "backend/contributor",
      "name": "/workspace/backend/contributor"
    },
    {
      "path": "frontend/contributor",
      "name": "/workspace/frontend/contributor"
    },
    {
      "path": "backend/portal",
      "name": "/workspace/backend/portal"
    },
    {
      "path": "frontend/portal",
      "name": "/workspace/frontend/portal"
    },
    {
      "path": "backend/rapid-router",
      "name": "/workspace/backend/rapid-router"
    },
    {
      "path": "frontend/rapid-router",
      "name": "/workspace/frontend/rapid-router"
    },
    {
      "path": "backend/sso",
      "name": "/workspace/backend/sso"
    },
    {
      "path": "frontend/sso",
      "name": "/workspace/frontend/sso"
    },
    {
      "path": "backend/template",
      "name": "/workspace/backend/template"
    },
    {
      "path": "frontend/template",
      "name": "/workspace/frontend/template"
    },
    {
      "path": "backend/scheduler",
      "name": "/workspace/backend/scheduler"
    },
    {
      "path": "legacy/portal",
      "name": "/workspace/legacy/portal"
    },
    {
      "path": "legacy/rapid-router",
      "name": "/workspace/legacy/rapid-router"
    },
    {
      "path": "legacy/deploy-appengine",
      "name": "/workspace/legacy/deploy-appengine"
    }
  ],
  "settings": {
    // General
    "editor.tabSize": 2,
    "editor.codeActionsOnSave": { "source.organizeImports": "explicit" },
    "editor.formatOnSave": true,
    "editor.rulers": [80],
    "workbench.colorCustomizations": { "editorRuler.foreground": "#008000" },
    "files.eol": "\n",
    "files.associations": {
      "/workspace/.scripts/**": "shellscript",
      "/workspace/.github/workflows/scripts/**": "shellscript"
    },
    "files.exclude": {
      // Python
      "**/.hypothesis": true,
      "**/.mypy_cache": true,
      "**/.pytest_cache": true,
      "**/__pycache__": true,
      "**/.coverage": true,
      // JavaScript
      "**/*.tsbuildinfo": true,
      // Custom
      "**/.workspace": true
    },
    "files.watcherExclude": {
      // General
      "**/.git/**": true,
      "**/dist/**": true,
      "**/build/**": true,
      // Python
      "**/.mypy_cache/**": true,
      "**/.pytest_cache/**": true,
      "**/__pycache__/**": true,
      "**/.venv/**": true,
      "**/static/**": true,
      "**/htmlcov/**": true,
      // JavaScript
      "**/node_modules/**": true,
      "**/coverage/**": true,
      // Custom
      "**/.workspace/**": true
    },
    "testing.defaultGutterClickAction": "debug",
    "cSpell.words": ["codeforlife", "klass", "ocado", "kurono", "pipenv"],
    "liveServer.settings.multiRootWorkspaceName": "/workspace",
    // Terminal
    "terminal.integrated.tabs.title": "${cwd} (${process})",
    "terminal.integrated.defaultProfile.linux": "bash",
    // Markdown
    "[md]": { "editor.tabSize": 4 },
    // Shell
    "[shellscript]": { "editor.defaultFormatter": "foxundermoon.shell-format" },
    // Python
    "python.defaultInterpreterPath": ".venv/bin/python",
    "python.testing.pytestArgs": [
      "-n=auto",
      "--cov=src",
      "--cov-report=html",
      "-c=/workspace/backend/pyproject.toml",
      "src"
    ],
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.analysis.extraPaths": [
      // Uncomment if installing locally in editable mode.
      // "/workspace/backend/package"
    ],
    "[python]": {
      "editor.defaultFormatter": "ms-python.black-formatter",
      "editor.tabSize": 4
    },
    "autoDocstring.customTemplatePath": "/workspace/backend/python-docstring.mustache",
    "black-formatter.args": ["--config", "/workspace/backend/pyproject.toml"],
    "black-formatter.path": [".venv/bin/python", "-m", "black"],
    "isort.args": ["--settings-file=/workspace/backend/pyproject.toml"],
    "isort.path": [".venv/bin/python", "-m", "isort"],
    "mypy-type-checker.args": [
      "--config-file=/workspace/backend/pyproject.toml"
    ],
    "mypy-type-checker.path": [".venv/bin/python", "-m", "mypy"],
    "pylint.args": ["--rcfile=/workspace/backend/pyproject.toml"],
    "pylint.path": [".venv/bin/python", "-m", "pylint"],
    // Database
    // TODO: create workflow to update sql connections for each BE service.
    "sqltools.connections": [
      {
        "previewLimit": 50,
        "server": "db",
        "port": 5432,
        "driver": "PostgreSQL",
        "name": "contributor",
        "database": "contributor",
        "username": "root",
        "password": "password"
      },
      {
        "previewLimit": 50,
        "server": "db",
        "port": 5432,
        "driver": "PostgreSQL",
        "name": "portal",
        "database": "portal",
        "username": "root",
        "password": "password"
      },
      {
        "previewLimit": 50,
        "server": "db",
        "port": 5432,
        "driver": "PostgreSQL",
        "name": "sso",
        "database": "sso",
        "username": "root",
        "password": "password"
      },
      {
        "previewLimit": 50,
        "server": "db",
        "port": 5432,
        "driver": "PostgreSQL",
        "name": "template",
        "database": "template",
        "username": "root",
        "password": "password"
      }
    ],
    // JavaScript, JavaScript React, TypeScript, TypeScript React
    "javascript.format.semicolons": "remove",
    "javascript.preferences.quoteStyle": "double",
    "typescript.format.semicolons": "remove",
    "typescript.preferences.quoteStyle": "double",
    "[javascript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "always",
        "source.organizeImports": "never"
      }
    },
    "[javascriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "always",
        "source.organizeImports": "never"
      }
    },
    "[typescript]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "always",
        "source.organizeImports": "never"
      }
    },
    "[typescriptreact]": {
      "editor.defaultFormatter": "esbenp.prettier-vscode",
      "editor.codeActionsOnSave": {
        "source.fixAll.eslint": "always",
        "source.organizeImports": "never"
      }
    },
    "prettier.configPath": "/workspace/frontend/.prettierrc.json",
    "prettier.ignorePath": "/workspace/frontend/.prettierignore",
    "eslint.useFlatConfig": true,
    "vitest.rootConfig": "/workspace/frontend/vite.config.ts",
    // JSON
    "[json]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
    // GraphQL
    "[graphql]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
    // Handlebars
    "[handlebars]": { "editor.defaultFormatter": "esbenp.prettier-vscode" }
  },
  "tasks": {
    "version": "2.0.0",
    "inputs": [
      {
        "id": "backend-folder",
        "type": "pickString",
        "description": "Select the backend folder.",
        "options": [
          "scheduler",
          "package",
          "portal",
          "contributor",
          "template",
          "sso",
          "rapid-router"
        ]
      },
      {
        "id": "frontend-folder",
        "type": "pickString",
        "description": "Select the frontend folder.",
        "options": [
          "package",
          "portal",
          "contributor",
          "template",
          "sso",
          "rapid-router"
        ]
      },
      {
        "id": "remember-frontend-service",
        "type": "command",
        "command": "extension.commandvariable.transform",
        "args": { "text": "${remember:frontend-service}" }
      },
      {
        "id": "args",
        "type": "promptString",
        "description": "Expected Format: \"{func} {arg1} {arg2} ...\"."
      },
      {
        "id": "frontend:scripts:run:dev:terminate",
        "type": "command",
        "command": "workbench.action.tasks.terminate",
        "args": "frontend:scripts:run:dev"
      }
    ],
    "tasks": [
      {
        "label": "scripts:backend",
        "command": "sudo chmod +x /workspace/backend/scripts && /workspace/backend/scripts ${input:args}",
        "type": "shell",
        "problemMatcher": [],
        "options": { "cwd": "/workspace/backend/${input:backend-folder}" }
      },
      {
        "label": "scripts:frontend",
        "command": "sudo chmod +x /workspace/frontend/scripts && /workspace/frontend/scripts ${input:args}",
        "type": "shell",
        "problemMatcher": [],
        "options": { "cwd": "/workspace/frontend/${input:frontend-folder}" }
      },
      {
        "label": "frontend:scripts:run:dev",
        "command": "sudo chmod +x /workspace/frontend/scripts && /workspace/frontend/scripts run:dev",
        "type": "shell",
        "problemMatcher": [],
        "isBackground": true,
        "options": {
          "cwd": "/workspace/frontend/${input:remember-frontend-service}",
          "env": { "BROWSER": "none" }
        }
      },
      {
        "label": "frontend:scripts:run:dev:terminate",
        "command": "echo ${input:frontend:scripts:run:dev:terminate}",
        "type": "shell",
        "problemMatcher": []
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "inputs": [
      {
        "id": "backend-service",
        "type": "command",
        "command": "extension.commandvariable.pickStringRemember",
        "args": {
          "key": "backend-service",
          "description": "Select the backend service.",
          "options": [
            "package",
            "portal",
            "contributor",
            "template",
            "sso",
            "rapid-router"
          ]
        }
      },
      {
        "id": "frontend-service",
        "type": "command",
        "command": "extension.commandvariable.pickStringRemember",
        "args": {
          "key": "frontend-service",
          "description": "Select the frontend service.",
          "options": [
            "package",
            "portal",
            "contributor",
            "template",
            "sso",
            "rapid-router"
          ]
        }
      },
      {
        "id": "django-network",
        "type": "promptString",
        "description": "Expected Format: \"{host}:{port}\".",
        "default": "localhost:8000"
      }
    ],
    "configurations": [
      {
        "console": "integratedTerminal",
        "justMyCode": false,
        "name": "Python: Current File",
        "program": "${file}",
        "request": "launch",
        "type": "debugpy"
      },
      {
        "args": ["runserver", "${input:django-network}"],
        "env": { "SERVER_MODE": "django" },
        "django": true,
        "justMyCode": false,
        "name": "Django Server",
        "program": "manage.py",
        "request": "launch",
        "type": "debugpy",
        "cwd": "/workspace/backend/${input:backend-service}"
      },
      {
        "env": { "SERVER_MODE": "celery" },
        "justMyCode": false,
        "name": "Celery Server",
        "program": "application.py",
        "request": "launch",
        "type": "debugpy",
        "cwd": "/workspace/backend/${input:backend-service}"
      },
      // https://code.visualstudio.com/docs/python/testing
      {
        "env": { "PYTEST_ADDOPTS": "--no-cov" },
        "justMyCode": false,
        "name": "Pytest",
        "presentation": { "hidden": true },
        "request": "launch",
        "type": "debugpy",
        "purpose": ["debug-test"]
      },
      {
        "name": "Vite Server",
        "preLaunchTask": "frontend:scripts:run:dev",
        "postDebugTask": "frontend:scripts:run:dev:terminate",
        "request": "launch",
        "type": "chrome",
        "url": "http://localhost:5173",
        "webRoot": "/workspace/frontend/${input:frontend-service}"
      }
      // TODO: Vitest Debug
      // https://vitest.dev/guide/debugging.html#vs-code
    ]
  },
  "extensions": { "unwantedRecommendations": ["ms-azuretools.vscode-docker"] }
}
