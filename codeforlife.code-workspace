{
  "folders": [
    {
      "path": "."
    },
    {
      "path": "codeforlife-contributor-backend"
    },
    {
      "path": "codeforlife-contributor-frontend"
    },
    // {
    //   "path": "codeforlife-deploy-appengine"
    // },
    {
      "path": "codeforlife-package-javascript"
    },
    {
      "path": "codeforlife-package-python"
    },
    {
      "path": "codeforlife-portal"
    },
    {
      "path": "codeforlife-portal-backend"
    },
    {
      "path": "codeforlife-portal-frontend"
    },
    // TODO: uncomment these as we begin restructuring them.
    // {
    //   "path": "codeforlife-rapid-router-backend"
    // },
    // {
    //   "path": "codeforlife-rapid-router-frontend"
    // },
    {
      "path": "codeforlife-scheduler"
    },
    // {
    //   "path": "codeforlife-sso-backend"
    // },
    // {
    //   "path": "codeforlife-sso-frontend"
    // },
    {
      "path": "codeforlife-template-backend"
    },
    {
      "path": "codeforlife-template-frontend"
    },
    {
      "path": "rapid-router"
    }
  ],
  "settings": {
    "files.eol": "auto",
    "autoDocstring.customTemplatePath": "configs/backend/python-docstring.mustache",
    "workbench.colorCustomizations": {
      "editorRuler.foreground": "#008000"
    },
    "[shellscript]": {
      "editor.defaultFormatter": "foxundermoon.shell-format"
    },
    // TODO: create workflow to update sql connections for each BE service.
    "sqltools.connections": [
      {
        "previewLimit": 50,
        "server": "db",
        "port": 5432,
        "driver": "PostgreSQL",
        "name": "contributor",
        "database": "contributor",
        "username": "root",
        "password": "password"
      },
      {
        "previewLimit": 50,
        "server": "db",
        "port": 5432,
        "driver": "PostgreSQL",
        "name": "portal",
        "database": "portal",
        "username": "root",
        "password": "password"
      },
      {
        "previewLimit": 50,
        "server": "db",
        "port": 5432,
        "driver": "PostgreSQL",
        "name": "template",
        "database": "template",
        "username": "root",
        "password": "password"
      }
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "inputs": [
      {
        "id": "backend-folder",
        "type": "pickString",
        "description": "Select the backend folder.",
        "options": [
          "codeforlife-scheduler",
          "codeforlife-package-python",
          "codeforlife-portal-backend",
          "codeforlife-contributor-backend",
          "codeforlife-template-backend"
        ]
      },
      {
        "id": "frontend-folder",
        "type": "pickString",
        "description": "Select the frontend folder.",
        "options": [
          "codeforlife-package-javascript",
          "codeforlife-portal-frontend",
          "codeforlife-contributor-frontend",
          "codeforlife-template-frontend"
        ]
      },
      {
        "id": "args",
        "type": "promptString",
        "description": "Expected Format: \"{func} {arg1} {arg2} ...\"."
      },
    ],
    "tasks": [
      {
        "label": "scripts:backend",
        "command": "sudo chmod +x ../scripts/backend && ../scripts/backend ${input:args}",
        "type": "shell",
        "problemMatcher": [],
        "options": {
          "cwd": "${workspaceFolder}/${input:backend-folder}"
        },
      },
      {
        "label": "scripts:frontend",
        "command": "sudo chmod +x ../scripts/frontend && ../scripts/frontend ${input:args}",
        "type": "shell",
        "problemMatcher": [],
        "options": {
          "cwd": "${workspaceFolder}/${input:frontend-folder}"
        },
      }
    ]
  },
  "launch": {
    "version": "0.2.0",
    "inputs": [
      {
        "id": "backend-service",
        "type": "pickString",
        "description": "Select the backend service.",
        "options": [
          "codeforlife-package-python",
          "codeforlife-portal-backend",
          "codeforlife-contributor-backend",
          "codeforlife-template-backend"
        ]
      },
      {
        "id": "django-network",
        "type": "promptString",
        "description": "Expected Format: \"{host}:{port}\".",
        "default": "localhost:8000"
      }
    ],
    "configurations": [
      {
        "console": "integratedTerminal",
        "justMyCode": false,
        "name": "Python: Current File",
        "program": "${file}",
        "request": "launch",
        "type": "debugpy"
      },
      {
        "args": [
          "runserver",
          "${input:django-network}"
        ],
        "env": {
          "SERVER": "DjangoServer"
        },
        "django": true,
        "justMyCode": false,
        "name": "Django Server",
        "program": "manage.py",
        "request": "launch",
        "type": "debugpy",
        "cwd": "/codeforlife-workspace/${input:backend-service}"
      },
      {
        "env": {
          "SERVER": "CeleryServer"
        },
        "justMyCode": false,
        "name": "Celery Server",
        "program": "application.py",
        "request": "launch",
        "type": "debugpy",
        "cwd": "/codeforlife-workspace/${input:backend-service}"
      }
    ]
  },
  "extensions": {
    "unwantedRecommendations": [
      "ms-azuretools.vscode-docker"
    ]
  }
}