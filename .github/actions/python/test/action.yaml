name: "Code for Life - Python - Test"
description: "Tests python code written in the CFL workspace."
inputs:
  python-version:
    description: "The python version to set up."
    required: true
    default: "3.8"
  working-directory:
    description: "The current working directory."
    required: true
    default: "."
  check-django-migrations:
    description: "Check if there are pending Django migrations."
    required: true
    default: "true"
runs:
  using: composite
  steps:
    - name: 🛫 Checkout
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: 🛠 Install Dependencies
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
        pipenv install --dev

    - name: 🔎 Check Code Format
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: if ! pipenv run black --check .; then exit 1; fi

    # TODO: check static type hints with mypy

    # TODO: check linter error with pylint

    - name: 🔎 Check Django Migrations
      if: inputs.check-django-migrations == 'true'
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: pipenv run python manage.py makemigrations --check --dry-run

    - name: 🧪 Test Code Units
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: pipenv run pytest -n auto

    # TODO: assert code coverage target.
