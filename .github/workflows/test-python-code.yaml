name: Test Python Code

on:
  workflow_call:
    inputs:
      python-version:
        description: "The python version to set up."
        type: number
        required: false
        default: 3.12
      working-directory:
        description: "The current working directory."
        type: string
        required: false
        default: "."
      source-path:
        description: "The path of the source files."
        type: string
        required: false
        default: "."
      pyproject-toml-download-branch:
        description: "The branch of the workspace repo to download the pyproject.toml from."
        type: string
        required: false
        default: "main"
      pyproject-toml-path:
        description: "The path of the pyproject.toml."
        type: string
        required: false
        default: "./pyproject.toml"
      codecov-slug:
        description: "The slug provided to Codecov for the coverage report."
        type: string
        required: false
        default: ${{ github.repository }}
      codecov-yml-download-branch:
        description: "The branch of the workspace repo to download the codecov.yml from."
        type: string
        required: false
        default: "main"
      codecov-yml-path:
        description: "The path of the Codecov YAML file."
        type: string
        required: false
        default: "./codecov.yml"
      postgres-version:
        description: "The postgres version to set up."
        type: number
        required: false
        default: 17
      postgres-db:
        description: "The postgres database to test against."
        type: string
        required: false
        default: "db"
      postgres-user:
        description: "The postgres user to test with."
        type: string
        required: false
        default: "root"
      postgres-password:
        description: "The postgres user's password."
        type: string
        required: false
        default: "password"
      snyk-config-path:
        description: "The path of the Snyk config file in the workspace."
        type: string
        required: false
        default: "backend/.snyk"
      redis-version:
        description: "The redis version to set up."
        type: number
        required: false
        default: 7.4
    secrets: # All secrets should not be required to support contributors.
      CODECOV_TOKEN:
        description: "The token used to gain access to Codecov."
        required: false
      SNYK_TOKEN:
        description: "The token used to authenticate with Snyk API."
        required: false

jobs:
  test-py-code:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    env:
      LANG: C.UTF-8
      COVERAGE_REPORT: coverage.xml # NOTE: COVERAGE_FILE is reserved - do not use.
      SOURCE: ${{ inputs.source-path }}
      PYPROJECT_TOML: ${{ inputs.pyproject-toml-path }}
      OCADO_TECH_ORG_ID: 2088731
      DB_NAME: ${{ inputs.postgres-db }}
      DB_HOST: localhost
      DB_USER: ${{ inputs.postgres-user }}
      DB_PASSWORD: ${{ inputs.postgres-password }}
      REDIS_HOST: localhost
      AWS_REGION: us-east-1
    services:
      postgres: # https://docs.github.com/en/actions/use-cases-and-examples/using-containerized-services/creating-postgresql-service-containers
        image: postgres:${{ inputs.postgres-version }}
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_HOST: ${{ env.DB_HOST }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        options: >- # Set health checks to wait until postgres has started
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis: # https://docs.github.com/en/actions/use-cases-and-examples/using-containerized-services/creating-redis-service-containers
        image: redis:${{ inputs.redis-version }}
        env:
          REDIS_HOST: ${{ env.REDIS_HOST }}
        options: >- # Set health checks to wait until redis has started
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: 🐍 Set up Python ${{ inputs.python-version }} Environment
        uses: ocadotechnology/codeforlife-workspace/.github/actions/python/setup-environment@main
        with:
          python-version: ${{ inputs.python-version }}
          install-args: --dev

      - name: 🏗️ Create AWS Resources
        uses: ocadotechnology/codeforlife-workspace/.github/actions/aws/create-resources@main
        with:
          region: ${{ env.AWS_REGION }}

      - name: 📥 Download Project Config File
        # Download default file if one is not already present in the repo.
        if: hashFiles(inputs.pyproject-toml-path) == ''
        uses: ocadotechnology/codeforlife-workspace/.github/actions/workspace/download-config-file@main
        with:
          branch: ${{ inputs.pyproject-toml-download-branch }}
          path: backend/pyproject.toml
          save-to: ${{ inputs.pyproject-toml-path }}

      - name: 📥 Download CLI Script File
        uses: ocadotechnology/codeforlife-workspace/.github/actions/workspace/download-script-file@main
        with:
          path: backend/cli
          save-to: ./cli

      - name: 🔎 Check Import Sort
        run: ./cli imports:check

      - name: 🔎 Check Code Format
        run: ./cli format:check

      - name: 🔎 Check Static Type Hints
        run: ./cli types:check

      - name: 🔎 Check Static Code
        run: ./cli code:check

      - name: 🔎 Check Django Migrations
        run: ./cli migrations:check

      - name: 🧪 Test Code Units
        run: |
          if [ ${{ github.repository_owner_id }} = ${{ env.OCADO_TECH_ORG_ID }} ]
          then ./cli test:coverage:report
          else ./cli test:coverage:check
          fi

      - name: 📈 Upload Coverage Reports to Codecov
        if: github.repository_owner_id == env.OCADO_TECH_ORG_ID
        uses: ocadotechnology/codeforlife-workspace/.github/actions/codecov/upload-report@main
        with:
          config-path: ${{ inputs.codecov-yml-path }}
          config-download-branch: ${{ inputs.codecov-yml-download-branch }}
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ inputs.codecov-slug }}
          file: ${{ env.COVERAGE_REPORT }}

      - name: 🐶 Run Snyk Tests
        if: github.repository_owner_id == env.OCADO_TECH_ORG_ID
        uses: ocadotechnology/codeforlife-workspace/.github/actions/snyk/run-tests@main
        with:
          snyk-token: ${{ secrets.SNYK_TOKEN }}
          config-path: ${{ inputs.snyk-config-path }}
          add-test-args: --command=.venv/bin/python
