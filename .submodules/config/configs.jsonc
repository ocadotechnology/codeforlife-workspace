// This file is used to define global submodule-configs for the submodules
// within CFL's workspace. This saves us having to manually repeat common
// configurations across 2+ submodules and avoids human error when accidentally
// copy/pasting something incorrectly.
//
// WARNING: This file is written in JSONC format (JSON with comments). However,
//  only single lines comments with no preceding text are allowed. For example:
//  - "// single-line comment, no preceding text" âœ…
//  - "{"age": 27} // single-line comment, some preceding text" ðŸš«
//  - "/* multi-line comment, no preceding text */" ðŸš«
//  - "{"age": 27} /* multi-line comment, some preceding text */" ðŸš«
//
// These configs are processed by .submodules/config/__main__.py. To understand
// more about the shape of this data, please read .submodules/config/configs.py.
{
  "base": {
    "description": "Base configuration to be inherited by all other configurations.",
    "vscode": {
      "settings": {
        "editor.tabSize": 2,
        "editor.rulers": [
          80
        ],
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit"
        },
        "[md]": {
          "editor.tabSize": 4
        },
        "cSpell.words": [
          "codeforlife",
          "klass",
          "ocado",
          "kurono",
          "pipenv"
        ]
      }
    }
  },
  "javascript": {
    "inherits": [
      "base"
    ],
    "description": "A configured javascript environment.",
    "submodules": [
      "codeforlife-package-javascript"
    ],
    "vscode": {
      "settings": {
        "javascript.format.semicolons": "remove",
        "typescript.format.semicolons": "remove",
        "javascript.preferences.quoteStyle": "double",
        "typescript.preferences.quoteStyle": "double",
        "!prettier.configPath": ".prettierrc.json",
        "editor.defaultFormatter": "esbenp.prettier-vscode"
      }
    }
  },
  "python": {
    "inherits": [
      "base"
    ],
    "description": "A configured python environment.",
    "submodules": [
      "codeforlife-deploy-appengine",
      "codeforlife-package-python",
      "codeforlife-portal",
      "rapid-router"
    ],
    "vscode": {
      "settings": {
        "python.defaultInterpreterPath": ".venv/bin/python",
        "python.testing.unittestEnabled": false,
        "python.testing.pytestEnabled": true,
        "[python]": {
          "editor.tabSize": 4,
          "editor.defaultFormatter": "ms-python.black-formatter"
        },
        "files.exclude": {
          "**/__pycache__": true,
          "**/.pytest_cache": true,
          "**/.mypy_cache": true,
          "**/.hypothesis": true
        },
        "!isort.path": [
          ".venv/bin/python",
          "-m",
          "isort"
        ],
        "!isort.args": [
          "--settings-file=pyproject.toml"
        ],
        "!black-formatter.path": [
          ".venv/bin/python",
          "-m",
          "black"
        ],
        "!black-formatter.args": [
          "--config",
          "pyproject.toml"
        ],
        "!mypy-type-checker.path": [
          ".venv/bin/python",
          "-m",
          "mypy"
        ],
        "!mypy-type-checker.args": [
          "--config-file=pyproject.toml"
        ],
        "!pylint.path": [
          ".venv/bin/python",
          "-m",
          "pylint"
        ],
        "!pylint.args": [
          "--rcfile=pyproject.toml"
        ],
        "!python.testing.pytestArgs": [
          "-n=auto",
          "--cov=.",
          "--cov-report=html",
          "-c=pyproject.toml",
          "."
        ]
      },
      "launch": {
        "version": "0.2.0",
        "configurations": [
          {
            "name": "Python: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": false
          },
          {
            "name": "Pytest",
            "type": "debugpy",
            "request": "test",
            "justMyCode": false,
            "presentation": {
              "hidden": true
            },
            "env": {
              "PYTEST_ADDOPTS": "--no-cov"
            }
          }
        ]
      }
    }
  },
  "service": {
    "inherits": [
      "base"
    ],
    "description": "A micro-service.",
    "vscode": {
      "tasks": {
        "version": "2.0.0",
        "tasks": [
          {
            "label": "setup",
            "type": "shell",
            "command": "sudo chmod u+x scripts/setup && scripts/setup",
            "problemMatcher": []
          },
          {
            "label": "hard-install",
            "type": "shell",
            "command": "sudo chmod u+x scripts/hard-install && scripts/hard-install",
            "problemMatcher": []
          },
          {
            "label": "run",
            "isBackground": true,
            "command": "sudo chmod u+x scripts/run && scripts/run",
            "type": "shell",
            "problemMatcher": []
          }
        ]
      }
    }
  },
  "service.backend": {
    "inherits": [
      "service",
      "python"
    ],
    "description": "A micro-service's backend.",
    "submodules": [
      "codeforlife-template-backend",
      "codeforlife-portal-backend"
    ],
    "vscode": {
      "settings": {
        "python.analysis.extraPaths": [
          "../codeforlife-package-python"
        ],
        "!python.testing.pytestArgs": [
          "-n=auto",
          "--cov=api",
          "--cov-report=html",
          "-c=pyproject.toml",
          "api"
        ]
      },
      "launch": {
        "version": "0.2.0",
        "configurations": [
          {
            "name": "Django Server",
            "type": "debugpy",
            "request": "launch",
            "django": true,
            "justMyCode": false,
            "program": "${workspaceFolder}/manage.py",
            "?args": [
              "runserver",
              "localhost:8000"
            ],
            "env": {
              "?SERVICE_NAME": "replace-me"
            },
            "preLaunchTask": "setup"
          }
        ]
      }
    }
  },
  "service.frontend": {
    "inherits": [
      "service",
      "javascript"
    ],
    "description": "A micro-service's frontend.",
    "submodules": [
      "codeforlife-portal-frontend"
    ],
    "vscode": {
      "tasks": {
        "tasks": [
          {
            "label": "run",
            "options": {
              "env": {
                "BROWSER": "none"
              }
            }
          }
        ]
      },
      "launch": {
        "version": "0.2.0",
        "configurations": [
          {
            "name": "Vite Server",
            "type": "chrome",
            "request": "launch",
            "url": "http://localhost:5173",
            "preLaunchTask": "run"
          }
        ]
      }
    }
  }
}